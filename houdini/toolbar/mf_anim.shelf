<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <tool name="mirror_pretransform" label="Mirror PreTr" icon="OBJ_STATE_mirrorcapture">
    <script scriptType="python"><![CDATA[sel_nodes = hou.selectedNodes()

if len(sel_nodes)%2 == 0:

    half_range = len(sel_nodes) / 2

    for i in range(0, half_range):
        node_copy = sel_nodes[i]
        node_paste = sel_nodes[i + half_range]
        ncopy_pre = node_copy.preTransform()

        trans = ncopy_pre.extractTranslates()
        trans[0] = -trans[0]

        rots = ncopy_pre.extractRotates()
        rots[1] = -rots[1]
        rots[2] = -rots[2]

        scs =  ncopy_pre.extractScales()
        mat_t = hou.hmath.buildTranslate(trans)
        mat_r = hou.hmath.buildRotate(rots)
        mat_s = hou.hmath.buildScale(scs)
        mat_all =  mat_r * mat_s * mat_t
        node_paste.setPreTransform(mat_all)

        if node_copy.type().name() == 'bone' and node_paste.type().name() == 'bone':
            node_paste.parm('length').set(node_copy.parm('length').eval())

#        extractTranslates()
#        extractShears()

#        node_paste.parm('ptx').setExpression("-ch('../" + node_copy.name() + "/ptx')")
#        node_paste.parm('pty').setExpression("ch('../" + node_copy.name() + "/pty')")
#        node_paste.parm('ptz').setExpression("ch('../" + node_copy.name() + "/ptz')")\
#
#        node_paste.parm('prx').setExpression("ch('../" + node_copy.name() + "/prx')")
#        node_paste.parm('pry').setExpression("-ch('../" + node_copy.name() + "/pry')")
#        node_paste.parm('prz').setExpression("-ch('../" + node_copy.name() + "/prz')")

        ]]></script>
  </tool>

  <toolshelf name="mfanim" label="MAnim">
    <memberTool name="mirror_pretransform"/>
  </toolshelf>
</shelfDocument>
